#
# Keyspace info
#
keyspace: flippertest

#
# The CQL for creating a keyspace (optional if it already exists)
#
keyspace_definition: |
  CREATE KEYSPACE flippertest WITH replication = {'class': 'NetworkTopologyStrategy', 'datacenter1': 3};

#
# Table info
#
table: user

#
# The CQL for creating a table you wish to stress (optional if it already exists)
#
table_definition: |
  CREATE TABLE user (
      id text,
      login text,
      password text,
      firstname text,
      lastname text,
      email text,
      activated boolean,
      lang_key text,
      activation_key text,
      reset_key text,
      reset_date timestamp,
      authorities set<text>,
      PRIMARY KEY(id)
  )
# Create INDEX login manually: CREATE INDEX ON user (login); CREATE INDEX ON user (email);
insert:
  partitions: uniform(1..50)       # number of unique partitions to update in a single operation
                                  # if batchcount > 1, multiple batches will be used but all partitions will
                                  # occur in all batches (unless they finish early); only the row counts will vary
  batchtype: LOGGED               # type of batch to use
  select: uniform(1..10)/10       # uniform chance any single generated CQL row will be visited in a partition;
                                  # generated for each partition independently, each time we visit it

#
# A list of queries you wish to run against the schema
#
queries:
   singlepost:
      cql: SELECT * from user WHERE id = ? LIMIT 1
      fields: samerow
   timeline:
      cql: select * from user where login = ? LIMIT 100
      fields: samerow             # samerow or multirow (select arguments from the same row, or randomly from all rows in the partition)
   email1:
      cql: select * from user where email = ? LIMIT 100
      fields: samerow
